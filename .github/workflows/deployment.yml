name: Deploy

on:
  push:
    tags:
      - 'v*'

# allow only one deployment at the same time
concurrency:
  group: deployment
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    environment: 'production'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # fetch all history and tags
          fetch-depth: 0
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Create .env
        uses: SpicyPizza/create-envfile@v2.0
        with:
          file_name: .env
          envkey_POSTGRES_DB: ${{ secrets.DB_NAME }}
          envkey_POSTGRES_USER: ${{ secrets.DB_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          envkey_POSTGRES_HOST: ${{ secrets.DB_HOST }}
          envkey_POSTGRES_PORT: ${{ secrets.DB_PORT }}
          envkey_NEXT_PUBLIC_API_URL: ${{ secrets.API_URL }}
          envkey_WEBSITE_URL: ${{ secrets.WEBSITE_URL }}
          envkey_WEBSITE_LANGUAGE: ${{ vars.WEBSITE_LANGUAGE }}
          envkey_WEBSITE_META_TITLE: ${{ vars.WEBSITE_META_TITLE }}
          envkey_WEBSITE_META_DESCRIPTION: ${{ vars.WEBSITE_META_DESCRIPTION }}
          envkey_NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          envkey_NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          envkey_NEXT_PUBLIC_SERVICEWORKER_VERSION: ${{ secrets.SERVICEWORKER_VERSION }}
          envkey_NEXT_PUBLIC_NOTIFICATIONS_PUBLIC_KEY: ${{ secrets.NOTIFICATIONS_PUBLIC_KEY }}
          envkey_NOTIFICATIONS_PRIVATE_KEY: ${{ secrets.NOTIFICATIONS_PRIVATE_KEY }}
          envkey_NOTIFICATIONS_SUBJECT: ${{ secrets.NOTIFICATIONS_SUBJECT }}
      - name: Build
        run: npm run build
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$DROPLET_SSH_KEY" > ~/.ssh/ghactions
          chmod 600 ~/.ssh/ghactions
        env:
          DROPLET_SSH_KEY: ${{ secrets.DROPLET_SSH_KEY }}
      - name: Deploy with rsync and restart application
        run: |
          rsync -az --delete \
          -e 'ssh -i ~/.ssh/ghactions -p ${{ secrets.DROPLET_SSH_PORT }} -o StrictHostKeyChecking=no' \
          --exclude=uploads \
          --exclude=ecosystem.config.js \
          --exclude=.nvmrc \
          --exclude=restart.sh \
          --backup --backup-dir=${{ secrets.DROPLET_RSYNC_BACKUP_DIRECTORY }} \
          .next/standalone/ ./public ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }}:${{ secrets.DROPLET_RSYNC_APP_DIRECTORY }}

          rsync -az --delete \
          -e 'ssh -i ~/.ssh/ghactions -p ${{ secrets.DROPLET_SSH_PORT }} -o StrictHostKeyChecking=no' \
          .next/static/ ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }}:${{ secrets.DROPLET_RSYNC_APP_DIRECTORY }}/.next/static/

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ghactions ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }} "sh ${{ secrets.DROPLET_RSYNC_APP_DIRECTORY }}/restart.sh;"
